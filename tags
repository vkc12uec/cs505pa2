!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
ClientApp	ClientApp.java	/^public class ClientApp$/;"	c
ConsensusDecision	Paxos.java	/^	public class ConsensusDecision 		\/\/ whr is this class used ?$/;"	c	class:Paxos
FailureDetector	Paxos.java	/^		public FailureDetector(List<String> Members)		\/\/ static assigned list , cant change in future$/;"	m	class:Paxos.FailureDetector
FailureDetector	Paxos.java	/^	public class FailureDetector extends Thread$/;"	c	class:Paxos
Hello	rmi/Hello.java	/^  public Hello (String msg) throws RemoteException {$/;"	m	class:Hello
Hello	rmi/Hello.java	/^public class Hello extends UnicastRemoteObject implements HelloInterface {$/;"	c
HelloClient	rmi/HelloClient.java	/^public class HelloClient{  \/**$/;"	c
HelloInterface	rmi/HelloInterface.java	/^public interface HelloInterface extends Remote {$/;"	i
HelloServer	rmi/HelloServer.java	/^public class HelloServer {$/;"	c
Lock	Lock.java	/^		public Lock ( String name, int ltime) {$/;"	m	class:Lock
Lock	Lock.java	/^public class Lock {$/;"	c
Lock	junk/LockClient.java	/^	public Lock ( String name, int ltime) {$/;"	m	class:Lock
Lock	junk/LockClient.java	/^public class Lock {$/;"	c
LockClient	ClientApp.java	/^	public LockClient () {$/;"	m	class:LockClient
LockClient	ClientApp.java	/^class LockClient { \/* applications can use this class to acquire and release locks *\/$/;"	c
LockClient	junk/LockClient.java	/^	public LockClient () {$/;"	m	class:LockClient
LockClient	junk/LockClient.java	/^class LockClient { \/* applications can use this class to acquire and release locks *\/$/;"	c
LockMain	LockMain.java	/^public class LockMain {$/;"	c
LockServer	LockServer.java	/^public interface LockServer extends Remote {                                                                                                              $/;"	i
LockServer	junk/LockClient.java	/^public interface LockServer extends Remote {$/;"	i
Locks	Locks.java	/^	public Locks () throws RemoteException {$/;"	m	class:Locks
Locks	Locks.java	/^public class Locks extends UnicastRemoteObject implements LockServer {$/;"	c
Locks	junk/LockClient.java	/^	public Locks () {$/;"	m	class:Locks
Locks	junk/LockClient.java	/^public class Locks extends UnicastRemoteObject implements LockServer {$/;"	c
Paxos	Paxos.java	/^	public Paxos(List<String> Members)$/;"	m	class:Paxos
Paxos	Paxos.java	/^class Paxos extends Thread$/;"	c
ReceiveMessageInterface	rmi2/ReceiveMessageInterface.java	/^public interface ReceiveMessageInterface extends Remote$/;"	i
RmiClient	rmi2/RmiClient.java	/^public class RmiClient$/;"	c
RmiServer	rmi2/RmiServer.java	/^	public RmiServer() throws RemoteException$/;"	m	class:RmiServer
RmiServer	rmi2/RmiServer.java	/^public class RmiServer extends java.rmi.server.UnicastRemoteObject implements ReceiveMessageInterface$/;"	c
accept_Tag	Paxos.java	/^	String accept_Tag = "Accept";$/;"	f	class:Paxos
accepted_Tag	Paxos.java	/^	String accepted_Tag = "Accepted";$/;"	f	class:Paxos
acquireLock	ClientApp.java	/^	public Lock acquireLock(String lock, int leaseTime) {$/;"	m	class:LockClient
acquireLock	LockServer.java	/^    public Lock acquireLock(String lock, int minTime) throws RemoteException;$/;"	m	interface:LockServer
acquireLock	Locks.java	/^	public Lock acquireLock(String lock_Name, int minTime) throws RemoteException {$/;"	m	class:Locks
acquireLock	junk/LockClient.java	/^	public Lock acquireLock(String lock, int leaseTime) {$/;"	m	class:LockClient
acquireLock	junk/LockClient.java	/^	public Lock acquireLock(String lock, int minTime) throws RemoteException {$/;"	m	class:Locks
acquireLock	junk/LockClient.java	/^	public Lock acquireLock(String lock, int minTime) throws RemoteException;$/;"	m	interface:LockServer
acquireLock_run	Locks.java	/^	public static boolean  acquireLock_run;$/;"	f	class:Locks
acquired_locks	Locks.java	/^	public static HashMap acquired_locks;		\/\/ Lock name and 0\/1 acquired \/ release$/;"	f	class:Locks
acquired_locks	junk/LockClient.java	/^	public HashMap<String, int> acquired_locks;		\/\/ Lock name and 0\/1 acquired \/ release$/;"	f	class:Locks
alive_Host	Paxos.java	/^	public static List<String> alive_Host = new ArrayList<String> ();$/;"	f	class:Paxos
alive_Tag	Paxos.java	/^	String alive_Tag = "Alive";$/;"	f	class:Paxos
am_I_Leader	Paxos.java	/^	public static boolean am_I_Leader;$/;"	f	class:Paxos
birthTime	Lock.java	/^		public int birthTime;$/;"	f	class:Lock
clients_Info	Paxos.java	/^	public String [][]clients_Info;$/;"	f	class:Paxos
createLock	ClientApp.java	/^	public boolean createLock(String lock) {$/;"	m	class:LockClient
createLock	LockServer.java	/^    public boolean createLock(String lock) throws RemoteException;$/;"	m	interface:LockServer
createLock	Locks.java	/^	public boolean createLock(String lock) throws RemoteException {$/;"	m	class:Locks
createLock	junk/LockClient.java	/^	public boolean createLock(String lock) throws RemoteException {$/;"	m	class:Locks
createLock	junk/LockClient.java	/^	public boolean createLock(String lock) throws RemoteException;$/;"	m	interface:LockServer
createLock	junk/LockClient.java	/^	public boolean createLock(String lock) {$/;"	m	class:LockClient
createLock_run	Locks.java	/^	public static boolean  createLock_run;$/;"	f	class:Locks
debug	ClientApp.java	/^	public void debug (String msg) {$/;"	m	class:LockClient
debug	junk/LockClient.java	/^	public static debug (String msg) {$/;"	m	class:LockClient
decidedValue	Paxos.java	/^		public String decidedValue;$/;"	f	class:Paxos.ConsensusDecision
failed_Host	Paxos.java	/^	public static List<String> failed_Host = new ArrayList<String> ();$/;"	f	class:Paxos
getAlive	Paxos.java	/^		public List<String> getAlive() {$/;"	m	class:Paxos.FailureDetector
getAllLocks	ClientApp.java	/^	public List<String> getAllLocks() {$/;"	m	class:LockClient
getAllLocks	LockServer.java	/^    public List<String> getAllLocks() throws RemoteException;$/;"	m	interface:LockServer
getAllLocks	Locks.java	/^	public List<String> getAllLocks() throws RemoteException {$/;"	m	class:Locks
getAllLocks	junk/LockClient.java	/^	public List<String> getAllLocks() throws RemoteException {$/;"	m	class:Locks
getAllLocks	junk/LockClient.java	/^	public List<String> getAllLocks() throws RemoteException;$/;"	m	interface:LockServer
getAllLocks	junk/LockClient.java	/^	public List<String> getAllLocks() {$/;"	m	class:LockClient
getFailed	Paxos.java	/^		public List<String> getFailed() {$/;"	m	class:Paxos.FailureDetector
getInstance_Tag	Paxos.java	/^	String getInstance_Tag = "GetInstance";$/;"	f	class:Paxos
getLeader	Paxos.java	/^		public String getLeader() {$/;"	m	class:Paxos.FailureDetector
getNextInstance	Paxos.java	/^	public int getNextInstance()$/;"	m	class:Paxos
getProposalNumber	Paxos.java	/^	public int getProposalNumber()$/;"	m	class:Paxos
getRemoteObject	junk/LockClient.java	/^	public LockServer getRemoteObject () {	\/\/ static ?$/;"	m	class:LockClient
global_Instance_Num	Paxos.java	/^	public int global_Instance_Num;$/;"	f	class:Paxos
global_Proposal_Num	Paxos.java	/^	public static int global_Proposal_Num;$/;"	f	class:Paxos
instance	Paxos.java	/^		public int instance;$/;"	f	class:Paxos.ConsensusDecision
isAlive	Paxos.java	/^		public boolean isAlive(String hostname) {$/;"	m	class:Paxos.FailureDetector
isValid	ClientApp.java	/^	public boolean isValid(String lock) {	\/* non RMI *\/$/;"	m	class:LockClient
isValid	junk/LockClient.java	/^	public boolean isValid(String lock) {	\/* non RMI *\/$/;"	m	class:LockClient
joinit	Paxos.java	/^	public  String joinit (String[] args) {$/;"	m	class:Paxos
leader	Paxos.java	/^	public static String leader;$/;"	f	class:Paxos
leaseTime	Lock.java	/^		public int leaseTime; \/\/the lease time is decided by the DLM$/;"	f	class:Lock
leaseTime	junk/LockClient.java	/^	public int leaseTime; \/\/the lease time is decided by the DLM$/;"	f	class:Lock
list_Host	Paxos.java	/^		public List<String> list_Host;$/;"	f	class:Paxos.FailureDetector
listenport	Paxos.java	/^	private static int	listenport = 6789;$/;"	f	class:Paxos	file:
lock2d	Locks.java	/^	public static Object [][] lock2d;$/;"	f	class:Locks
lockInterface	ClientApp.java	/^	LockServer lockInterface;$/;"	f	class:LockClient
lockName	Lock.java	/^		public String lockName; \/\/name of the lock$/;"	f	class:Lock
lockName	junk/LockClient.java	/^	public String lockName; \/\/name of the lock$/;"	f	class:Lock
lock_Action_Info	Paxos.java	/^	public int [][]lock_Action_Info;$/;"	f	class:Paxos
lock_Info	Paxos.java	/^	public String [][]lock_Info;$/;"	f	class:Paxos
lock_map	Locks.java	/^	public static HashMap<String, Lock> lock_map ;			\/\/ lock name \/ lock object$/;"	f	class:Locks
lock_map	junk/LockClient.java	/^	public HashMap<String, Lock> lock_map ;			\/\/ lock name \/ lock object$/;"	f	class:Locks
main	ClientApp.java	/^	public static void main (String args[])$/;"	m	class:ClientApp
main	LockMain.java	/^	public static void main (String[] argv) {$/;"	m	class:LockMain
main	Paxos.java	/^	public static void main (String [] args)$/;"	m	class:Paxos
main	rmi/HelloClient.java	/^  public static void main (String[] argv) {$/;"	m	class:HelloClient
main	rmi/HelloServer.java	/^  public static void main (String[] argv) {$/;"	m	class:HelloServer
main	rmi2/RmiClient.java	/^    static public void main(String args[])$/;"	m	class:RmiClient
main	rmi2/RmiServer.java	/^	static public void main(String args[])$/;"	m	class:RmiServer
message	rmi/Hello.java	/^  private String message;$/;"	f	class:Hello	file:
msgDelimiter	Locks.java	/^	String msgDelimiter = "#";$/;"	f	class:Locks
msgDelimiter	Paxos.java	/^	String msgDelimiter = "#";$/;"	f	class:Paxos
myPaxos	Locks.java	/^	public Paxos myPaxos;$/;"	f	class:Locks
myPaxos	junk/LockClient.java	/^	public Paxos myPaxos;$/;"	f	class:Locks
mysock	Paxos.java	/^	ServerSocket 		mysock;$/;"	f	class:Paxos
num_Accepted	Paxos.java	/^	public int [][]num_Accepted;$/;"	f	class:Paxos
num_Promise	Paxos.java	/^	public int [][]num_Promise;$/;"	f	class:Paxos
num_Rejected	Paxos.java	/^	public int [][]num_Rejected;$/;"	f	class:Paxos
outsock	Paxos.java	/^	Socket 				outsock;$/;"	f	class:Paxos
prepare_Response	Paxos.java	/^	public String prepare_Response(String msg)$/;"	m	class:Paxos
prepare_Tag	Paxos.java	/^	String prepare_Tag = "Prepare";$/;"	f	class:Paxos
prepare_msg	Locks.java	/^	public String prepare_msg (String op , String lock_name) {$/;"	m	class:Locks
prepare_msg	junk/LockClient.java	/^	public String prepare_msg (String op , String lock_name) {$/;"	m	class:Locks
promise_Tag	Paxos.java	/^	String promise_Tag = "Promise";$/;"	f	class:Paxos
proposedValue	Paxos.java	/^		public String proposedValue;$/;"	f	class:Paxos.ConsensusDecision
receiveMessage	rmi2/ReceiveMessageInterface.java	/^	void receiveMessage(String x) throws RemoteException;$/;"	m	interface:ReceiveMessageInterface
receiveMessage	rmi2/RmiServer.java	/^	public void receiveMessage(String x) throws RemoteException$/;"	m	class:RmiServer
registry	ClientApp.java	/^	Registry registry;$/;"	f	class:LockClient
registry	Locks.java	/^	Registry registry;    \/\/ rmi registry for lookup the remote objects.$/;"	f	class:Locks
registry	rmi2/RmiServer.java	/^	Registry registry;    \/\/ rmi registry for lookup the remote objects.$/;"	f	class:RmiServer
releaseLock	ClientApp.java	/^	public boolean releaseLock(String lock) {$/;"	m	class:LockClient
releaseLock	LockServer.java	/^    public boolean releaseLock(String lock) throws RemoteException;$/;"	m	interface:LockServer
releaseLock	Locks.java	/^	public boolean releaseLock(String lock_Name) throws RemoteException {$/;"	m	class:Locks
releaseLock	junk/LockClient.java	/^	public boolean releaseLock(String lock) throws RemoteException {$/;"	m	class:Locks
releaseLock	junk/LockClient.java	/^	public boolean releaseLock(String lock) throws RemoteException;$/;"	m	interface:LockServer
releaseLock	junk/LockClient.java	/^	public boolean releaseLock(String lock) {$/;"	m	class:LockClient
releaseLock_run	Locks.java	/^	public static boolean  releaseLock_run;$/;"	f	class:Locks
renewLock	ClientApp.java	/^	public Lock renewLock(String lock, int renewalTime) {$/;"	m	class:LockClient
renewLock	LockServer.java	/^    public Lock renewLock(String Lock, int renewalTime) throws RemoteException;$/;"	m	interface:LockServer
renewLock	Locks.java	/^	public Lock renewLock(String Lock, int renewalTime) throws RemoteException {$/;"	m	class:Locks
renewLock	junk/LockClient.java	/^	public Lock renewLock(String Lock, int renewalTime) throws RemoteException {$/;"	m	class:Locks
renewLock	junk/LockClient.java	/^	public Lock renewLock(String Lock, int renewalTime) throws RemoteException;$/;"	m	interface:LockServer
renewLock	junk/LockClient.java	/^	public Lock renewLock(String lock, int renewalTime) {$/;"	m	class:LockClient
request_Tag	Paxos.java	/^	String request_Tag = "Request";$/;"	f	class:Paxos
response_Tag	Paxos.java	/^	String response_Tag = "Response";$/;"	f	class:Paxos
response_info	Paxos.java	/^	public String [][]response_info;$/;"	f	class:Paxos
return_response_info	Paxos.java	/^	public boolean  return_response_info(int inst_num,int prop_num)$/;"	m	class:Paxos
rmiport	ClientApp.java	/^	public static int rmiport = 3232;$/;"	f	class:LockClient
rmiport	Locks.java	/^	public static int rmiport = 3232;$/;"	f	class:Locks
run	Paxos.java	/^		public void run() {$/;"	m	class:Paxos.FailureDetector
run	Paxos.java	/^	public void run() $/;"	m	class:Paxos
say	rmi/Hello.java	/^  public String say() throws RemoteException {$/;"	m	class:Hello
say	rmi/HelloInterface.java	/^  public String say() throws RemoteException;$/;"	m	interface:HelloInterface
self_ID	Paxos.java	/^	public String self_ID;$/;"	f	class:Paxos
sendToHost	Paxos.java	/^	public static String sendToHost(String msg, String dest)$/;"	m	class:Paxos
sendToHost_tmp	Paxos.java	/^	public static String sendToHost_tmp(String msg, String dest)$/;"	m	class:Paxos
serverAdd	ClientApp.java	/^	public static String serverAdd = "sslab09.cs.purdue.edu";		\/\/ rmi server$/;"	f	class:LockClient
server_List	Paxos.java	/^	public List<String> server_List;$/;"	f	class:Paxos
start_Accept	Paxos.java	/^	public void start_Accept(String msg)$/;"	m	class:Paxos
thisAddress	rmi2/RmiServer.java	/^	String   thisAddress;$/;"	f	class:RmiServer
thisPort	rmi2/RmiServer.java	/^	int      thisPort;$/;"	f	class:RmiServer
valid_locks	ClientApp.java	/^	public List<String> valid_locks;$/;"	f	class:LockClient
valid_locks	Locks.java	/^	public static List <String> valid_locks;$/;"	f	class:Locks
valid_locks	junk/LockClient.java	/^	public List <String> valid_locks;$/;"	f	class:Locks
valid_locks	junk/LockClient.java	/^	public List<String> valid_locks;$/;"	f	class:LockClient
